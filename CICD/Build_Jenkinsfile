env.module = "${JOB_NAME}".split('/')[1]
env.workspace = "mrchecker-framework-modules"
pipeline{
	agent {label 'agent'}
	stages{
		stage('Build'){
			steps{
				echo "Building module ${env.module} and it's dependency"
				sh """
				cd ${env.workspace}
				mvn clean compile package install -DskipTests=true --projects ${env.module} --also-make
				"""
				//bulid this module and its dependencies deploy them to local repo
			}
		}
		stage('Test'){
			steps{
				echo "Testing ${env.module}"
				sh """
				cd ${env.workspace}
				mvn test --projects {env.module} -DseleniumGrid=http://10.40.234.103:4444/wd/hub
				"""
			}
		}
	}
	post{
		always{
			archiveArtifacts artifacts: "${env.workspace}/${env.module}/target/*.jar", fingerprint: true
			allure includeProperties: false, jdk: '', report: "${env.workspace}/${env.module}/target/allure-report", results: [[path: "${env.workspace}/${env.module}/target/allure-results"]]
			jacoco()
			junit testResults:'**/surefire-reports/*.xml', healthScaleFactor: 0.0 //as I set the junit treshold to 0%
		}
		success{
			script{
				def downstreamJob = "${JOB_NAME}".split('/')
				downstreamJob[0] = 'test'
				downstreamJob = downstreamJob.join('/')
				try{
					build job: downstreamJob, propagate: false, wait: false
				}catch(Exception e){
					println("ERROR! Cannot start the downstream job with name ${downstreamJob}. ${e}")
				}
			}
		}
	}
}